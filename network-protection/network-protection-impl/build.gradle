/*
 * Copyright (c) 2022 DuckDuckGo
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.anvil)
}

apply from: "$rootProject.projectDir/gradle/android-library.gradle"

dependencies {
    anvil project(':anvil-compiler')
    implementation project(':anrs-api')
    implementation project(':anvil-annotations')
    implementation project(':app-build-config-api')
    implementation project(':browser-api')
    implementation project(':common-utils')
    implementation project(':common-ui')
    implementation project(':di')
    implementation project(':app-tracking-api')
    implementation project(':vpn-api')
    implementation project(':navigation-api')
    implementation project(':network-protection-api')
    implementation project(':network-protection-store')
    implementation project(':library-loader-api')
    implementation project(':statistics')
    implementation project(':feature-toggles-api')
    implementation project(':privacy-config-api')
    implementation project(':navigation-api')
    implementation project(':subscriptions-api')
    implementation project(':settings-api')
    implementation project(':remote-messaging-api')
    implementation project(':data-store-api')
    implementation project(':new-tab-page-api')
    implementation project(':survey-api')

    implementation libs.androidx.appCompat
    implementation libs.androidx.constraintLayout
    implementation libs.androidx.lifecycle.runtime
    implementation libs.androidx.lifecycle.viewModel.ktx
    implementation libs.androidx.room.runtime
    implementation libs.material
    implementation Google.dagger
    implementation "com.squareup.logcat:logcat:_"
    implementation libs.kotlin.coroutines.core
    implementation libs.retrofit
    implementation libs.retrofit.converter.moshi
    implementation libs.moshi.kotlin

    // Lottie
    implementation libs.lottie

    testImplementation project(':common-test')
    testImplementation project(':vpn-api-test')
    testImplementation project(':data-store-test')
    testImplementation CashApp.turbine
    testImplementation Testing.junit4
    testImplementation libs.androidx.arch.core.testing
    testImplementation AndroidX.test.ext.junit
    testImplementation "org.mockito.kotlin:mockito-kotlin:_"
    testImplementation Testing.robolectric
    testImplementation libs.androidx.lifecycle.runtime.testing

    // WorkManager
    implementation libs.androidx.workManager.ktx
    implementation libs.androidx.workManager.multiProcess
    testImplementation libs.androidx.workManager.testing

    implementation libs.okhttp.tls

    // see https://github.com/google/conscrypt/issues/649#issuecomment-808482460
    compileOnly 'org.conscrypt:conscrypt-openjdk-uber:2.5.0'
    runtimeOnly 'org.conscrypt:conscrypt-android:2.5.0'
    testImplementation 'org.conscrypt:conscrypt-openjdk-uber:2.5.0'

    // Shimmer
    implementation "com.facebook.shimmer:shimmer:_"

    coreLibraryDesugaring Android.tools.desugarJdkLibs
}

ext {
    NETP_DEBUG_SERVER_TOKEN="${System.getenv('NETP_DEBUG_SERVER_TOKEN')}"
}

android {
    namespace 'com.duckduckgo.networkprotection.impl'
    anvil {
        generateDaggerFactories = true // default is false
    }
    lintOptions {
        baseline file("lint-baseline.xml")
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    defaultConfig {
        buildConfigField "String", "NETP_DEBUG_SERVER_TOKEN", "\"${NETP_DEBUG_SERVER_TOKEN}\""
    }
    compileOptions {
        coreLibraryDesugaringEnabled = true
    }
}