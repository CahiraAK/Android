/*
 * Copyright (c) 2021 DuckDuckGo
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.library'
    id 'kotlin-android'
//    id 'kotlin-kapt'
    id 'com.google.devtools.ksp' version "$ksp_version"
    id 'com.squareup.anvil'
}

apply from: "$rootProject.projectDir/gradle/android-library.gradle"

android {
    namespace "com.duckduckgo.browser.impl"

    defaultConfig {
        sourceSets {
            androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "store"
    buildTypes {
        debug {
            manifestPlaceholders = [
                    appIcon     : "@mipmap/ic_launcher_blue",
                    appIconRound: "@mipmap/ic_launcher_blue_round"
            ]
        }
        release {
            manifestPlaceholders = [
                    appIcon     : "@mipmap/ic_launcher_red",
                    appIconRound: "@mipmap/ic_launcher_red_round"
            ]
        }
    }
    productFlavors {
        internal {
            dimension "store"
        }
        fdroid {
            dimension "store"
        }
        play {
            dimension "store"
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlin {
        jvmToolchain(17)
    }
    anvil {
        generateDaggerFactories = true // default is false
    }

    testOptions {
        unitTests.returnDefaultValues = true
        animationsDisabled = true
    }
}

dependencies {
    // Deprecated. TODO: Stop using this artifact.
    implementation "androidx.legacy:legacy-support-v4:_"
    androidTestImplementation project(':app')
    debugImplementation Square.leakCanary.android

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation KotlinX.coroutines.core
    implementation KotlinX.coroutines.android
    androidTestImplementation(KotlinX.coroutines.test) {
        // https://github.com/Kotlin/kotlinx.coroutines/issues/2023
        // conflicts with mockito due to direct inclusion of byte buddy
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }

    anvil project(':anvil-compiler')
    implementation project(':anvil-annotations')




    implementation project(path: ':browser-api')
    implementation project(':statistics')
    implementation project(':saved-sites-api')
    implementation project(':saved-sites-store')
    implementation project(':app-store')
    implementation project(':di')
    implementation project(':common-ui')
    implementation project(':navigation-api')
    implementation project(':internal-features-api')
    implementation project(':feature-toggles-api')
    implementation project(':app-build-config-api')
    implementation project(':autofill-api')
    implementation project(':sync-api')
    implementation project(':privacy-config-api')
    implementation project(':voice-search-api')
    implementation project(':user-agent-api')
    implementation project(':sync-settings-api')
    implementation project(':common-utils')


    /**
     * Above dependencies are definitely needed; below is the full list for debugging purposes
     */

    implementation project(':navigation-api')
    implementation project(':navigation-impl')

    implementation project(path: ':vpn-network-api')
    implementation project(path: ':vpn-network-impl')

    implementation project(':library-loader-api')

    implementation project(':autofill-api')
    implementation project(':autofill-impl')
    implementation project(':autofill-store')
    internalImplementation project(':autofill-internal')
    testImplementation project(':autofill-test')

    anvil project(':anvil-compiler')
    implementation project(':anvil-annotations')

    implementation project(':app-build-config-api')
    implementation project(':browser-api')
    implementation project(':statistics')
    implementation project(':experiments-api')
    implementation project(':experiments-impl')
    implementation project(':common-utils')
    implementation project(':app-store')
    implementation project(':common-ui')
    internalImplementation project(':common-ui-internal')
    implementation project(':di')
    implementation project(':app-tracking-api')
    implementation project(':vpn-impl')
    implementation project(':vpn-api')
    implementation project(':vpn-store')
//    internalImplementation project(':vpn-internal')

    implementation project(':feature-toggles-api')
    testImplementation project(':feature-toggles-test')
    implementation project(':feature-toggles-impl')
    implementation project(':privacy-config-api')
    implementation project(':privacy-config-impl')
    implementation project(':privacy-config-store')
    internalImplementation project(':privacy-config-internal')

    implementation project(':anrs-api')
    implementation project(':anrs-store')
    implementation project(':anrs-impl')
    implementation project(':macos-api')
    implementation project(':macos-impl')

    implementation project(':privacy-dashboard-api')
    implementation project(':privacy-dashboard-impl')

    implementation project(':remote-messaging-api')
    implementation project(':remote-messaging-impl')
    implementation project(':remote-messaging-store')

    implementation project(':voice-search-api')
    implementation project(':voice-search-impl')
    implementation project(':voice-search-store')

    implementation project(':downloads-api')
    implementation project(':downloads-impl')
    implementation project(':downloads-store')

    internalImplementation project(':traces-api')
    internalImplementation project(':traces-impl')

    implementation project(':site-permissions-api')
    implementation project(':site-permissions-impl')

    implementation project(':ad-click-api')
    implementation project(':ad-click-impl')
    implementation project(':ad-click-store')

    implementation project(':autoconsent-api')
    implementation project(':autoconsent-impl')
    implementation project(':autoconsent-store')

    implementation project(':cookies-api')
    implementation project(':cookies-impl')
    implementation project(':cookies-store')

    implementation project(':content-scope-scripts-api')
    implementation project(':content-scope-scripts-impl')

    implementation project(':network-protection-api')
    implementation project(':network-protection-impl')
    internalImplementation project(':network-protection-internal')
    implementation project(':network-protection-store')

    implementation project(':fingerprint-protection-api')
    implementation project(':fingerprint-protection-impl')
    implementation project(':fingerprint-protection-store')

    implementation project(':element-hiding-impl')
    implementation project(':element-hiding-store')

    implementation project(':httpsupgrade-api')
    implementation project(':httpsupgrade-impl')
    implementation project(':httpsupgrade-store')

    implementation project(':sync-api')
    implementation project(':sync-impl')
    internalImplementation project(':sync-internal')
    implementation project(':sync-store')
    implementation project(':sync-lib')
    implementation project(':sync-settings-api')
    implementation project(':sync-settings-impl')

    implementation project(':request-filterer-api')
    implementation project(':request-filterer-impl')
    implementation project(':request-filterer-store')

    implementation project(':windows-api')
    implementation project(':windows-impl')
    implementation project(':saved-sites-api')
    implementation project(':saved-sites-impl')
    implementation project(':saved-sites-store')

    implementation project(':runtime-checks-impl')
    implementation project(':runtime-checks-store')

    implementation project(':installation-impl')

    implementation project(':internal-features-api')

    implementation project(':web-compat-impl')
    implementation project(':web-compat-store')

    if (project.hasProperty('internal-testing')) {
        implementation project(':subscriptions-api')
        implementation project(':subscriptions-impl')
        implementation project(':subscriptions-store')
        internalImplementation project(':subscriptions-internal')
        internalImplementation project(':network-protection-subscription-internal')
    }

    implementation project(':user-agent-api')
    implementation project(':user-agent-impl')

    implementation project(':js-messaging-api')
    implementation project(':js-messaging-impl')

    implementation project(':settings-api')
    implementation project(':settings-impl')

    implementation project(':broken-site-api')
    implementation project(':broken-site-impl')
    implementation project(':broken-site-store')

    implementation project(':backup-agent-api')
    implementation project(':backup-agent-impl')



    implementation AndroidX.appCompat
    implementation Google.android.material
    implementation AndroidX.constraintLayout
    implementation AndroidX.recyclerView
    implementation AndroidX.swipeRefreshLayout
    implementation AndroidX.webkit
    implementation Square.okHttp3.okHttp
    implementation Square.retrofit2.retrofit
    implementation Square.retrofit2.converter.moshi
    implementation "com.squareup.moshi:moshi-kotlin:_"
    implementation Square.retrofit2.adapter.rxJava2
    implementation Square.retrofit2.converter.scalars
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:_"
    implementation "io.reactivex.rxjava2:rxjava:_"
    implementation "io.reactivex.rxjava2:rxandroid:_"
    implementation JakeWharton.timber

    // ThreeTenABP
    implementation "com.jakewharton.threetenabp:threetenabp:_"
    testImplementation "org.threeten:threetenbp:_"

    // RxRelay
    implementation "com.jakewharton.rxrelay2:rxrelay:_"

    // Android KTX
    implementation AndroidX.core.ktx
    implementation AndroidX.fragment.ktx

    // ViewModel and LiveData
    implementation AndroidX.lifecycle.runtime.ktx
    implementation AndroidX.lifecycle.viewModelKtx
    implementation AndroidX.lifecycle.liveDataKtx
    implementation AndroidX.lifecycle.process

    implementation AndroidX.lifecycle.commonJava8
    testImplementation AndroidX.archCore.testing
    androidTestImplementation AndroidX.archCore.testing

    // Room
    implementation AndroidX.room.runtime
    implementation AndroidX.room.rxJava2
    implementation AndroidX.room.ktx
    ksp AndroidX.room.compiler
    testImplementation AndroidX.room.testing
    androidTestImplementation AndroidX.room.testing

    // WorkManager
    implementation AndroidX.work.runtimeKtx
    implementation "androidx.work:work-multiprocess:_"
    androidTestImplementation AndroidX.work.testing
    testImplementation AndroidX.work.testing
    implementation AndroidX.work.rxJava2

    // Dagger
//    kapt Google.dagger.compiler
    implementation Google.dagger

    // Glide
    implementation "com.github.bumptech.glide:glide:_"

    // Lottie
    implementation "com.airbnb.android:lottie:_"

    // Security crypto
    implementation AndroidX.security.crypto

    // Play Store referrer library
    playImplementation("com.android.installreferrer:installreferrer:_")

    // HTML
    implementation 'org.jsoup:jsoup:_'


    // Flipper
    internalImplementation "com.facebook.flipper:flipper:_"
    internalImplementation "com.facebook.soloader:soloader:_"

    // Testing dependencies
    androidTestUtil AndroidX.test.orchestrator
    androidTestImplementation AndroidX.archCore.testing
    androidTestImplementation AndroidX.test.runner
    androidTestImplementation AndroidX.test.rules
    androidTestImplementation "org.mockito:mockito-android:_"
    androidTestImplementation "org.mockito.kotlin:mockito-kotlin:_"
    androidTestImplementation Square.okHttp3.mockWebServer
    androidTestImplementation CashApp.turbine
    androidTestUtil AndroidX.test.orchestrator
    androidTestImplementation AndroidX.test.ext.junit
    androidTestImplementation "androidx.test.ext:junit-ktx:_"
    androidTestImplementation "androidx.test.espresso:espresso-core:_"
    androidTestImplementation "androidx.test.espresso:espresso-web:_"

    testImplementation project(':vpn-api-test')
    testImplementation "org.mockito.kotlin:mockito-kotlin:_"
    testImplementation Testing.junit4
    testImplementation AndroidX.archCore.testing
    testImplementation AndroidX.core
    testImplementation AndroidX.test.ext.junit
    testImplementation Testing.robolectric
    testImplementation CashApp.turbine
    testImplementation "androidx.test:runner:_"
    testImplementation (KotlinX.coroutines.test) {
        // https://github.com/Kotlin/kotlinx.coroutines/issues/2023
        // conflicts with mockito due to direct inclusion of byte buddy
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }

    androidTestImplementation project(':common-test')
    testImplementation project(':common-test')
    lintChecks project(":lint-rules")
}

// android-library declares `testDebugUnitTest` as a dependency of jvm_checks, but that doesn't exist for this module
// this effectively delegates to the right task
tasks.register('testDebugUnitTest') {
    dependsOn 'testPlayDebugUnitTest'
}
